@charset "UTF-8";
/*
https://github.com/lolmaus/breakpoint-slicer
--------------------------------------------------------------------------------
 Breakpoint:   0                 400px     600px     800px       1050px
               ├───────────────────┼─────────┼─────────┼───────────┼─────────>
 Slice #:                1         ·    2         3          4     ·    5
               ·                   ·         ·         ·           ·
               ·                   ·         ·  at(3)  ·           ·
               ·                   ·         ├─────────┤           ·
               ·                   ·         ·         ·           ·
               ·                   ·         · from(3) ·           ·
               ·                   ·         ├───────────────────────────────>
               ·                   ·                   ·           ·
               ·                   ·            to(3)  ·           ·
               ├───────────────────────────────────────┤           ·
                                   ·                               ·
                                   ·         between(2, 4)         ·
                                   ├───────────────────────────────┤
--------------------------------------------------------------------------------
*/
/* @import "../../bower_components/bootstrap-sass/assets/stylesheets/_bootstrap.scss"; */
@media (min-width: 769px) {
  .catalog-item figure, .catalog-list > .filter {
    display: -ms-flexbox;
    display: flex; } }

html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit; }

body {
  display: -ms-flexbox;
  display: flex;
  min-height: 100vh;
  -ms-flex-flow: column nowrap;
  flex-flow: column nowrap;
  color: #363636;
  background-color: #f1f2f4;
  font-family: "Roboto Slab";
  font-weight: 300;
  word-wrap: break-word;
  overflow-y: scroll;
  overflow-x: hidden !important;
  /* @include debug-layout; */ }

.site-content {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
  flex-direction: column; }

@media (min-width: 769px) {
  .site-content {
    -ms-flex-direction: row;
    flex-direction: row;
    -ms-flex: 1;
    flex: 1; } }

/* container */
.container {
  position: relative; }

@media (min-width: 769px) {
  .container {
    max-width: 1152px; } }

/* end of container */
.is-multiline {
  -ms-flex-wrap: wrap;
  flex-wrap: wrap; }

.main-nav {
  -ms-flex-order: -1;
  order: -1;
  background-color: orange; }

.main-content {
  -ms-flex-order: 1;
  order: 1;
  text-align: center; }

@media (max-width: 768px) {
  .main-content {
    -ms-flex-order: -1;
    order: -1; } }

img {
  height: auto;
  max-width: 100%; }

input:focus,
textarea:focus {
  outline: none; }

.break-word {
  word-wrap: break-word; }

.center {
  text-align: center; }

.hidden {
  display: none !important;
  visibility: hidden !important; }

a {
  color: #285473;
  text-decoration: none;
  transition: all .35s; }

ul {
  list-style: none;
  margin: 0;
  padding: 0; }

ol {
  counter-reset: list1; }
  ol li:before {
    counter-increment: list1;
    content: counter(list1) ". "; }
  ol ol {
    counter-reset: list2; }
    ol ol li:before {
      counter-increment: list2;
      content: counter(list1) "." counter(list2) ". "; }
    ol ol ol {
      counter-reset: list3; }
      ol ol ol li:before {
        counter-increment: list3;
        content: counter(list1) "." counter(list2) "." counter(list3) ". "; }

/* @import "../../../bower_components/font-awesome/scss/font-awesome.scss"; */
@font-face {
  font-family: "Didot Bold";
  src: url("../fonts/didot-bold/didot-bold.ttf") format("truetype");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: "Lato Bold";
  src: url("../fonts/lato/Lato-Bold.ttf") format("truetype");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: "Playfair Display Regular";
  src: url("../fonts/playfair-display/PlayfairDisplay-Regular.otf") format("opentype");
  font-weight: normal;
  font-style: normal; }

.send-button {
  /*     border: 0;
    font-size: 0.875rem;
    background: none;
    background-color: #e3b3e3;
    border-color: #333;
    cursor: pointer;
    padding: 0.625em 1em;
    text-decoration: none;
    font-weight: 600;
    text-shadow: none;
    display: inline-block;
    outline: none;
    -webkit-appearance: none;
    -webkit-font-smoothing: antialiased;
    border-radius: 0.3125em;
    box-shadow:
        inset 0 -1px 0 rgba(#000,.3); */
  padding: .3em .8em;
  border: 1px solid rgba(0, 0, 0, 0.1);
  background: #58a linear-gradient(rgba(255, 255, 255, 0.2), transparent);
  border-radius: .2em;
  box-shadow: 0 0.05em 0.25em rgba(0, 0, 0, 0.5);
  color: white;
  text-shadow: 0 -0.05em 0.05em rgba(0, 0, 0, 0.5);
  font-size: 125%;
  line-height: 1.5;
  transition: all .2s;
  color: #fff;
  background-color: #6995a9; }
  .send-button:hover {
    background: #4696db; }

.btn-default {
  /*     border: 0;
    font-size: 0.875rem;
    background: none;
    background-color: #e3b3e3;
    border-color: #333;
    cursor: pointer;
    padding: 0.625em 1em;
    text-decoration: none;
    font-weight: 600;
    text-shadow: none;
    display: inline-block;
    outline: none;
    -webkit-appearance: none;
    -webkit-font-smoothing: antialiased;
    border-radius: 0.3125em;
    box-shadow:
        inset 0 -1px 0 rgba(#000,.3); */
  padding: .3em .8em;
  border: 1px solid rgba(0, 0, 0, 0.1);
  background: #58a linear-gradient(rgba(255, 255, 255, 0.2), transparent);
  border-radius: .2em;
  box-shadow: 0 0.05em 0.25em rgba(0, 0, 0, 0.5);
  color: white;
  text-shadow: 0 -0.05em 0.05em rgba(0, 0, 0, 0.5);
  font-size: 125%;
  line-height: 1.5;
  transition: all .2s;
  border: 1px dashed #ffffff;
  background: #8DDE24;
  color: #ffffff;
  font-family: "Roboto Regular";
  font-size: 1.125em;
  border-radius: 6px;
  text-align: center; }
  .btn-default:hover {
    background: #9CED9C; }

.button {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
  justify-content: center; }

.footer {
  background-color: #fff;
  color: #332; }

.header {
  background-color: orange; }
  @media (max-width: 320px) {
    .header {
      background-color: red !important; } }
  @media (min-width: 321px) and (max-width: 768px) {
    .header {
      background-color: yellow !important; } }
  @media (min-width: 769px) and (max-width: 1000px) {
    .header {
      background-color: green !important; } }
  @media (min-width: 1001px) {
    .header {
      background-color: blue !important; } }

/*
# ===============================================
# Layout
# ===============================================
*/
.catalog-item figure {
  margin: 0;
  -ms-flex-flow: column wrap;
  flex-flow: column wrap; }

.catalog-list > .filter {
  -ms-flex-direction: row;
  flex-direction: row;
  -ms-flex-pack: center;
  justify-content: center; }
  .catalog-list > .filter li {
    text-align: center;
    margin: 1rem; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
